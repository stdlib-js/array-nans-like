// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/array-dtype@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/array-full@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-float64@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-float32@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";var i=new r(NaN,NaN),o=new n(NaN,NaN),a=["float64","float32","complex128","complex64","generic"];function l(r){var n,l;if(null===(n=e(r)))throw new TypeError(s("invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.",r));if(arguments.length>1){if(n=arguments[1],-1===a.indexOf(n))throw new TypeError(s('invalid argument. Second argument must be one of the following: "%s". Value: `%s`.',a.join('", "'),n))}else if(-1===a.indexOf(n))throw new TypeError(s('invalid argument. First argument must be one of the following data types: "%s". Value: `%s`.',a.join('", "'),n));return l="complex128"===n?i:"complex64"===n?o:NaN,t(r.length,l,n)}export{l as default};
//# sourceMappingURL=index.mjs.map
