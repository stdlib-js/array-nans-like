{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar dtype = require( '@stdlib/array-dtype' );\nvar full = require( '@stdlib/array-full' );\nvar Complex128 = require( '@stdlib/complex-float64' );\nvar Complex64 = require( '@stdlib/complex-float32' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar Z128 = new Complex128( NaN, NaN );\nvar Z64 = new Complex64( NaN, NaN );\nvar DTYPES = [ 'float64', 'float32', 'complex128', 'complex64', 'generic' ];\n\n\n// MAIN //\n\n/**\n* Creates an array filled with NaNs and having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} second argument must be a supported data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = nansLike( [ 0.0, 0.0 ] );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var arr = nansLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ NaN, NaN ]\n*/\nfunction nansLike( x ) {\n\tvar dt;\n\tvar v;\n\n\tdt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdt = arguments[ 1 ];\n\t\tif ( DTYPES.indexOf( dt ) === -1 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be one of the following: \"%s\". Value: `%s`.', DTYPES.join( '\", \"' ), dt ) );\n\t\t}\n\t} else if ( DTYPES.indexOf( dt ) === -1 ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be one of the following data types: \"%s\". Value: `%s`.', DTYPES.join( '\", \"' ), dt ) );\n\t}\n\tif ( dt === 'complex128' ) {\n\t\tv = Z128;\n\t} else if ( dt === 'complex64' ) {\n\t\tv = Z64;\n\t} else {\n\t\tv = NaN;\n\t}\n\treturn full( x.length, v, dt );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nansLike;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an array filled with NaNs and having the same length and data type as a provided input array.\n*\n* @module @stdlib/array-nans-like\n*\n* @example\n* var nansLike = require( '@stdlib/array-nans-like' );\n*\n* var arr = nansLike( [ 0.0, 0.0 ] );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var nansLike = require( '@stdlib/array-nans-like' );\n*\n* var arr = nansLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ NaN, NaN ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,qBAAsB,EACvCC,EAAO,QAAS,oBAAqB,EACrCC,EAAa,QAAS,yBAA0B,EAChDC,EAAY,QAAS,yBAA0B,EAC/CC,EAAS,QAAS,uBAAwB,EAK1CC,EAAO,IAAIH,EAAY,IAAK,GAAI,EAChCI,EAAM,IAAIH,EAAW,IAAK,GAAI,EAC9BI,EAAS,CAAE,UAAW,UAAW,aAAc,YAAa,SAAU,EAsB1E,SAASC,EAAUC,EAAI,CACtB,IAAIC,EACAC,EAGJ,GADAD,EAAKV,EAAOS,CAAE,EACTC,IAAO,KACX,MAAM,IAAI,UAAWN,EAAQ,8GAA+GK,CAAE,CAAE,EAEjJ,GAAK,UAAU,OAAS,GAEvB,GADAC,EAAK,UAAW,CAAE,EACbH,EAAO,QAASG,CAAG,IAAM,GAC7B,MAAM,IAAI,UAAWN,EAAQ,qFAAsFG,EAAO,KAAM,MAAO,EAAGG,CAAG,CAAE,UAErIH,EAAO,QAASG,CAAG,IAAM,GACpC,MAAM,IAAI,UAAWN,EAAQ,+FAAgGG,EAAO,KAAM,MAAO,EAAGG,CAAG,CAAE,EAE1J,OAAKA,IAAO,aACXC,EAAIN,EACOK,IAAO,YAClBC,EAAIL,EAEJK,EAAI,IAEEV,EAAMQ,EAAE,OAAQE,EAAGD,CAAG,CAC9B,CAKAX,EAAO,QAAUS,IC5CjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "dtype", "full", "Complex128", "Complex64", "format", "Z128", "Z64", "DTYPES", "nansLike", "x", "dt", "v", "main"]
}
